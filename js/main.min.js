const navToggle = document.getElementById('nav-toggle');
const headerMobile = document.querySelector('.header-mobile');


vacanciesInit();
tabsInit();

navToggle.addEventListener('click', function() {

    header.classList.toggle('active');
    this.classList.toggle('active');
    headerMobile.classList.toggle('active');
    document.body.classList.toggle('overflow-hidden');
    
    if( !headerMobile.classList.contains('active') && document.body.classList.contains('overflow-hidden') ) {
      document.body.classList.remove('overflow-hidden');
    }
  
  
});

const introSlider = new Swiper('.intro-slider', {
    slidesPerView: 'auto',
    spaceBetween: 22,
    navigation: {
        prevEl: '.intro-slider-nav .prev',
        nextEl: '.intro-slider-nav .next'
    },
    pagination: {
        el: '.intro-slider-pagination',
        clickable: true
    }
});


function vacanciesInit() {
    const vacancies = document?.querySelectorAll('.vacancy .toggle');
  
    vacancies.forEach((item) => {
      item.addEventListener('click', function(e) {
    
        e.preventDefault();
    
        const container = this.closest('.items');
        const otherItems = container.querySelectorAll('.active');
        const parent = this.closest('.vacancy');
        const content = parent.querySelector('.vacancy-content');
        
        parent.classList.toggle('active');
        parent.querySelector('.vacancy-content').slideToggle(300);
    
        if( otherItems ) {
          otherItems.forEach(function(elem) {
            elem.querySelector('.vacancy-content').slideToggle(300);
            elem.classList.remove('active');
          });
        }
    
    
      });
    });
}

function tabsInit() {

    const tabButtons = document.querySelectorAll('.tab-button');
  
    tabButtons?.forEach(function(button) {
  
      button.addEventListener('click', function() {
    
        if( this.classList.contains('active') ) return;
    
        const tab = this.closest('.tab');
        const contentID = this.dataset.content;
        const activeContent = tab.querySelector('.tab-content.active');
        const activeButton = tab.querySelector('.tab-button.active');
        const contentToActive = document.getElementById(contentID);
        
    
        if( contentToActive ) {
    
          activeContent.classList.remove('active');
          activeButton.classList.remove('active');
    
          this.classList.add('active');
          contentToActive.classList.add('active');
    
        }
    
      });
    });
  }


  // Slide Toggle Vanilla JS
HTMLElement.prototype.slideToggle = function(duration, displayType) {
    if (this.clientHeight === 0) {
      _s(this, duration, true, displayType);
    } else {
      _s(this, duration, false, displayType);
    }
  };
  
  function _s(el, duration, isDown, displayType) {
    
    if (typeof duration === 'undefined') duration = 400;
    if (typeof isDown === 'undefined') isDown = false;
    if (typeof displayType === 'undefined') displayType = 'block';
  
    el.style.overflow = "hidden";
    if (isDown) el.style.display = displayType;
  
    var elStyles        = window.getComputedStyle(el);
  
    var elHeight        = parseFloat(elStyles.getPropertyValue('height'));
    var elPaddingTop    = parseFloat(elStyles.getPropertyValue('padding-top'));
    var elPaddingBottom = parseFloat(elStyles.getPropertyValue('padding-bottom'));
    var elMarginTop     = parseFloat(elStyles.getPropertyValue('margin-top'));
    var elMarginBottom  = parseFloat(elStyles.getPropertyValue('margin-bottom'));
  
    var stepHeight        = elHeight        / duration;
    var stepPaddingTop    = elPaddingTop    / duration;
    var stepPaddingBottom = elPaddingBottom / duration;
    var stepMarginTop     = elMarginTop     / duration;
    var stepMarginBottom  = elMarginBottom  / duration;
  
    var start;
  
    function step(timestamp) {
  
      if (start === undefined) start = timestamp;
  
      var elapsed = timestamp - start;
  
      if (isDown) {
        el.style.height        = (stepHeight        * elapsed) + "px";
        el.style.paddingTop    = (stepPaddingTop    * elapsed) + "px";
        el.style.paddingBottom = (stepPaddingBottom * elapsed) + "px";
        el.style.marginTop     = (stepMarginTop     * elapsed) + "px";
        el.style.marginBottom  = (stepMarginBottom  * elapsed) + "px";
      } else {
        el.style.height        = elHeight        - (stepHeight        * elapsed) + "px";
        el.style.paddingTop    = elPaddingTop    - (stepPaddingTop    * elapsed) + "px";
        el.style.paddingBottom = elPaddingBottom - (stepPaddingBottom * elapsed) + "px";
        el.style.marginTop     = elMarginTop     - (stepMarginTop     * elapsed) + "px";
        el.style.marginBottom  = elMarginBottom  - (stepMarginBottom  * elapsed) + "px";
      }
  
      if (elapsed >= duration) {
        el.style.height        = "";
        el.style.paddingTop    = "";
        el.style.paddingBottom = "";
        el.style.marginTop     = "";
        el.style.marginBottom  = "";
        el.style.overflow      = "";
        if (!isDown) el.style.display = "none";
      } else {
        window.requestAnimationFrame(step);
      }
    }
  
    window.requestAnimationFrame(step);
  }
  